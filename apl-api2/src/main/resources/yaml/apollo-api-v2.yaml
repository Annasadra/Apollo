openapi: 3.0.1
info:
  title: Apollo API V2
  description: Apollo API V2 work in progress
  contact:
    email: apiteam@firstbridge.io
  version: 2.0.0
externalDocs:
  description: The project VCS repository
  url: https://github.com/ApolloFoundation/Apollo
servers:
- url: http://localhost:8080/api/v2

tags:
- name: account
  description: Operations about account
- name: state
  description: Everything about blockchain state
- name: tx
  description: Access to transactions management
- name: operations
  description: List operations by account (the bank reconcilation)
- name: info
  description: An information

paths:
  /account:
    post:
      tags:
      - account
      summary: Create account
      operationId: createAccount
      requestBody:
        description: the list of public keys
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AccountReq'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResp'
        401:
          description: Unauthorized Error
        403:
          description: Access Forbidden
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /account/{account}:
    get:
      tags:
      - account
      summary: Returns the details account information
      operationId: getAccountInfo
      parameters:
        - name: account
          in: path
          description: The account id
          required: true
          schema:
            type: string
            example: 'APL-X5JH-TJKJ-DVGC-5T2V8'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        401:
          description: Unauthorized Error
        403:
          description: Access Forbidden
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /state/blockchain:
    get:
      tags:
      - state
      summary: Get blockchain object
      description: Return details information about the blockchain
      operationId: getBlockchainInfo
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blockchain'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /state/block:
    get:
      tags:
      - state
      summary: Get blockchain object
      description: Return details information about the block given block height. If no height is provided, it will fetch the latest block.
      operationId: getBlockByHeight
      parameters:
      - name: height
        in: query
        description: a blockchain height
        required: false
        schema:
          type: string
          format: int64
          example: '4315161'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /state/block/{block}:
    get:
      tags:
      - state
      summary: Get block object given block id
      description: Return the detail information about block given id
      operationId: getBlockById
      parameters:
      - name: block
        in: path
        description: Block id
        required: true
        schema:
          type: string
          format: int64
          example: '11306043151604016701'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /state/tx/{transaction}:
    get:
      tags:
      - state
      summary: Get transaction receipt given transaction id.
      description: Return the brief information about transaction given id.
      operationId: getTxReceiptById
      parameters:
      - name: transaction
        in: path
        description: Transaction id
        required: true
        schema:
          type: string
          format: int64
          example: '11306043151604016701'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxReceipt'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /state/tx:
    post:
      tags:
      - state
      summary: Get transaction receipt list given list of the transaction id.
      description: Return the list of the brief information about transactions.
      operationId: getTxReceiptList
      requestBody:
        description: tx objects list
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: int64
                example: '8334041786134176852'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TxReceipt'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /state/unconfirmed/count:
    get:
      tags:
      - state
      summary: Get count of unconfirmed transaction receipts.
      description: Return the count of unconfirmed transactions.
      operationId: getUnconfirmedTxCount
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    format: int64
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /state/unconfirmed:
    get:
      tags:
      - state
      summary: Get list of unconfirmed transaction receipts.
      description: Return the detail information about transaction by id.
      operationId: getUnconfirmedTx
      parameters:
         - name: page
           in: query
           description: page number (1-based)
           required: false
           schema:
             type: integer
             format: int32
             default: 1
             example: 1
         - name: perPage
           in: query
           description: Number of entries per page (max=100)
           required: false
           schema:
             type: integer
             format: int32
             maximum: 100
             default: 50
             example: 50
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /transaction:
    post:
      tags:
      - tx
      summary: Broadcast transaction and return transaction receipt.
      description: Asynchronously broadcast the signed transaction to the network. The transaction is immediately put into an unconfirmed transaction pool and later is sending to the network.
      operationId: broadcastTx
      requestBody:
        description: tx object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TxRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnTxReceipt'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /transaction/batch:
    post:
      tags:
      - tx
      summary: Broadcast a batch of transactions and return the transaction receipt list.
      description: Asynchronously broadcast the batch of the signed transaction to the network. The transactions are immediately put into an unconfirmed transaction pool in the same order as in the batch and later are sending to the network.
      operationId: broadcastTxBatch
      requestBody:
        description: signed transaction byte array in hex format
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TxRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnTxReceipt'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /transaction/{transaction}:
    get:
      tags:
      - tx
      summary: Get transaction object given transaction id.
      description: Return the detail information about transaction by id.
      operationId: getTxById
      parameters:
      - name: transaction
        in: path
        description: Transaction id
        required: true
        schema:
          type: string
          format: int64
          example: '11306043151604016701'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /operation/count:
    post:
      tags:
      - operations
      summary: Returns the count of operations corresponding the query object group by account
      operationId: getOperationsCount
      requestBody:
        description: the query object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryObject'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCountResult'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []
  /operation:
    post:
      tags:
      - operations
      summary: Returns the operation list corresponding the query object group by account
      operationId: getOperations
      requestBody:
        description: the query object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryObject'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
      security:
      - bearerAuth: []

  /info/health:
    get:
      tags:
      - info
      summary: Gets node health
      operationId: getHealthInfo
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        500:
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          description: The transaction ID
          type: string
          format: int64
          example: '11306043151604016701'
        type:
          description: Transaction type
          type: string
          example: '2'
        subtype:
          description: Transaction subtype
          type: string
          example: '1'
        phased:
          description: is true if the transaction is phased
          type: boolean
          example: false
        timestamp:
          type: integer
          format: int64
          description: Transaction timestamp, Unix timestamp in milliseconds
          example: 1591696372000
        deadline:
          description: the deadline for the transaction to be confirmed in minutes,ex.1440=24h
          type: integer
          format: int32
          example: 1440
        senderPublicKey:
          type: string
          description: The public key of the sending account for the transaction
        recipient:
          type: string
          description: The account Id of the recipient
          example: 'APL-FXHG-6KHM-23LE-42ACU'
        amount:
          type: string
          format: int64
          description: The amount of the transaction
          example: 34500000000
        fee:
          type: string
          format: int64
          example: 200000000
          description: The fee of the transaction
        referencedTransactionFullHash:
          type: string
          description: The full hash of a transaction referenced by this one
          example: '5424ca4dd976a873839c7d5c9952fa15ae619f678365e8ebbc73f967142eb40d'
        signature:
          type: string
          example: '920173ae606d36c1c77fc5bdf294bd048d04f85c46535525771b524dbb1ed20b73311900d4a409c293a10d8a5ab987430be4bd7478fb16a41cf775afa33c4d56'
          description: The digital signature of the transaction
        signatureHash:
          type: string
          description: SHA-256 hash of the transaction signature
          example: '2fc1883e9b76fdc67fabee0a3def5f4b7fc2de9cd65bc8bb6d39eaf5e99498d8'
        fullHash:
          type: string
          description: The full hash of the transaction
          example: '39dc2e813bb45ff063a376e316b10cd0addd7306555ca0dd2890194d37960152'
        attachment:
          type: object
          nullable: true
          additionalProperties:
            type: object
          description: An object containong any additional data needed for the transaction
        sender:
          type: string
          description: The sender account
          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'
        height:
          type: integer
          format: int64
          example: 4365987
          description: The height of the block in the blockchain
        version:
          type: string
          example: '1'
          description: The transaction version number
        ecBlockId:
          type: string
          format: int64
          description: The economic clustering block ID
          example: '4015856251679437054'
        ecBlockHeight:
          type: integer
          format: int64
          description: The economic clustering block height
          example: 3301233
        block:
          type: string
          format: int64
          description: The block id
          example: '2345856251679437054'
        confirmations:
          type: integer
          format: int32
          description: the number of transaction confirmations
          example: 387
        blockTimestamp:
          type: integer
          format: int64
          description: Block timestamp, Unix timestamp in milliseconds
          example: 1591696372000
        index:
          type: integer
          format: int32
          description: the order of the transaction in the block
          example: 1
    Block:
      type: object
      properties:
        id:
          type: string
          example: '11306043151604016701'
        blockSignature:
          type: string
          example: 'ff080e64436603df0c3b9a5b792b03a26725a83bbe6aa46eb7eed9ee83707f071b6d529d09be1f2594c6f8545c2772a091896bc808553c1774e39a41248b1e1c'
        height:
          type: integer
          format: int64
          example: 1319854
        generator:
          type: string
          example: 'APL-FXHG-6KHM-23LE-42ACU'
        generationSignature:
          type: string
          example: '60e598f6276371119720786b05e507cd628665473b24c8f76de436d99cf113f7'
        generatorPublicKey:
          type: string
          example: '39dc2e813bb45ff063a376e316b10cd0addd7306555ca0dd2890194d37960152'
        timestamp:
          type: integer
          format: int64
          description: Block timestamp, Unix timestamp in milliseconds
          example: 1591696372000
        timeout:
          type: integer
          format: int32
          example: 1
        version:
          description: The block version
          type: integer
          format: int32
          example: 6
        baseTarget:
          type: string
          example: '7686143350'
        cumulativeDifficulty:
          type: string
          format: int64
          example: '8728234277524822'
        previousBlock:
          description: Prev block id
          type: string
          example: '8047873372645143160'
        previousBlockHash:
          type: string
          example: '5b8ba14eaebba8cdc682c946947f5352a596d00ac63c4e616785d00cf8b8e016'
        nextBlock:
          description: Next block id
          type: string
          example: '14819300931180530523'
        payloadHash:
          type: string
          description: Hash of the paylod (all transactions)
          example: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'
        payloadLength:
          description: The length in bytes of all transactions
          type: integer
          format: int32
          example: 523423
        numberOfTransactions:
          type: integer
          format: int32
          example: 14
        totalAmountATM:
          type: string
          example: '569000000000000'
        totalFeeATM:
          type: string
          example: '2800000000'
    Blockchain:
      type: object
      properties:
        chainid:
          type: string
          example: 'a2e9b946-290b-48b6-9985-dc2e5a5860a1'
        genesisPublicKey:
          type: string
          example: '1259ec21d31a30898d7cd1609f80d9668b4778e3d97e941044b39f0c44d2e51b'
        height:
          type: integer
          format: int64
          example: 4789567
        genesisBlockTimestamp:
          type: integer
          format: int64
          description: Genesis block timestamp, Unix timestamp in milliseconds
          example: 1491696372000
        timestamp:
          type: integer
          format: int64
          description: Request timestamp, Unix timestamp in milliseconds
          example: 1591696372000
    TxRequest:
      required:
        - tx
      type: object
      properties:
        tx:
          description: Signed transaction data
          type: string
          example: '001047857c04a00539dc2e813bb45ff063a376e316b10cd0addd7306555ca0dd2890194d37960152eef5365f2400292d00ca9a3b0000000000c2eb0b000000000000000000000000000000000000000000000000000000000000000000000000920173ae606d36c1c77fc5bdf294bd048d04f85c46535525771b524dbb1ed20b73311900d4a409c293a10d8a5ab987430be4bd7478fb16a41cf775afa33c4d5600000000f1da1300fe7062e6fb2fbb37'
          nullable: false
    AccountReq:
      required:
        - publicKey
      type: object
      properties:
        publickey:
          type: string
          example: '39dc2e813bb45ff063a376e316b10cd0adeb7306111ca0eb2890194d37960152'
        alias:
          description: the account alias
          type: string
          example: 'aSimpleAccount'
    AccountResp:
      allOf:
        - $ref: '#/components/schemas/BasicAccount'
        - type: object
          properties:
            status:
              type: string
              enum:
                - created
                - failed
              example: created
            reason:
              type: string
              example: 'Account successfully created'
    BasicAccount:
      type: object
      properties:
        account:
          type: string
          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'
        publicKey:
          description: The account public key in a hex string format
          type: string
          example: '39dc2e813bb45ff063a376e316b10cd0addd7306555ca0dd2890194d37960152'
    Account:
      allOf:
        - $ref: '#/components/schemas/BasicAccount'
        - type: object
          properties:
            balance:
              type: string
              example: '45225600000000'
            unconfirmedbalance:
              type: string
              example: '45225600000000'
            status:
              type: string
              enum:
                - created
                - verified
              example: created
    QueryObject:
      type: object
      properties:
        accounts:
          description: Exactly all items.
          nullable: true
          type: array
          items:
            type: string
            example: 'APL-X5JH-TJKJ-DVGC-5T2V8'
        transactionStatus:
            type: string
            description: |
                The transaction status. A transaction is considered as unconfirmed until it is included in a valid block.
                A transaction is considered as confirmed after at least one confirmations, so a transaction is considered
                as irreversible after 721 confirmations and finally a transaction is permanent if it's confirmed 1440 times.
            enum: [confirmed, irreversible, permanent]
            example: confirmed
        first:
          type: integer
          format: int64
          description: The first block height
          example: 4000123
        last:
          type: integer
          format: int64
          description: The last block height
          example: 4999000
        startTime:
          type: integer
          format: int64
          description: The start of the time period, Unix timestamp in milliseconds
          example: 1591696310000
        endTime:
          type: integer
          format: int64
          description: The end of the time period, Unix timestamp in milliseconds
          example: 1591696372000
        page:
          type: integer
          format: int32
          description: page number (1-based)
          default: 1
          example: 1
        perPage:
          type: integer
          format: int32
          description: Number of entries per page (max=100)
          default: 25
          example: 25
        orderBy:
          type: string
          nullable: true
          enum: [asc, desc]
          default: asc
    QueryResult:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        query:
          $ref: '#/components/schemas/QueryObject'
    QueryCountResult:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/OperationCount'
        query:
          $ref: '#/components/schemas/QueryObject'
    Operation:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Account'
        operations:
          type: array
          items:
            $ref: '#/components/schemas/TxReceipt'
    OperationCount:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Account'
        operations_count:
          type: integer
          format: int32
    UnTxReceipt:
      description: Unconfirmed transaction receipt
      required:
        - transaction
        - sender
        - recipient
        - signature
      type: object
      properties:
        transaction:
          type: string
          example: '8334041786134176852'
        sender:
          type: string
          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'
        recipient:
          type: string
          example: 'APL-FXHG-6KHM-23LE-42ACU'
        signature:
          type: string
          example: 'B98CB1890E76C772A10994B210ED9CF7F9A5488672A5D82C2734BBF9D11505D1'
        timestamp:
          type: integer
          format: int64
          description: Transaction timestamp, Unix timestamp in milliseconds
          example: 1591696372000
        amount:
          type: string
          format: int64
          example: '34500000000'
        fee:
          type: string
          format: int64
          example: '0'
    TxReceipt:
      description: Confirmed transaction receipt
      allOf:
        - $ref: '#/components/schemas/UnTxReceipt'
        - type: object
          properties:
            block:
              description: The Id of the block containing the confirmed transaction
              type: string
              example: '4015856251679437054'
            blockHash:
              type: string
              example: '72A5D82C2734BBF9D11505D1B98CB1890E76C772A10994B210ED9CF7F9A54886'
            blockTimestamp:
              type: integer
              format: int64
              description: Block timestamp, Unix timestamp in milliseconds
              example: 1591696372000
            height:
              type: integer
              format: int64
              example: 15623658
            index:
              type: integer
              format: int32
              description: the order of the transaction in the block
              example: 1
            status:
              type: string
              description: |
                The transaction status. A transaction is considered as unconfirmed until it is included in a valid block.
                A transaction is considered as confirmed after at least one confirmations, so a transaction is considered
                as irreversible after 721 confirmations and finally a transaction is permanent if it's confirmed 1440 times.
              enum: [unconfirmed, confirmed, irreversible, permanent]
              example: confirmed
    EmptyResponse:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
          description: Response timestamp, Unix timestamp in milliseconds
          example: 1591696372000
        result:
          type: object
          additionalProperties: {}
          nullable: true
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 123
        type:
          description: the type of error
          type: string
          enum: [fatal, error]
          example: error
        message:
          description: the error message
          type: string
          example: 'Description of failure'
  responses:
    BadRequest:
      description: Bad request - malformed request or wrong parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServerError:
      description: Server error - internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

